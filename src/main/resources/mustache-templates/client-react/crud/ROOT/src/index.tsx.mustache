import "react-app-polyfill/ie11";
import "react-app-polyfill/stable";
import React from "react";
import ReactDOM from "react-dom";
import {Provider} from "react-redux";
import axios from "axios";
import { OAuthWebContext, OAuthSecuredFragment } from "@jfront/oauth-ui";
import { UserContextProvider } from "@jfront/oauth-user";
import "./index.css";
import App from "./App";
import * as serviceWorker from "./serviceWorker";
import "./i18n";
import { store } from "./app/store";

ReactDOM.render(
  // <React.StrictMode>
  <OAuthWebContext
    clientId={'[@EntityName@]'}
    redirectUri={`${process.env.NODE_ENV === 'development' ? "http://localhost:3000/oauth" : `/[@EntityName@]/react/oauth`}`}
    oauthContextPath={`${process.env.NODE_ENV === 'development' ? 'http://localhost/oauth/api' : `/oauth/api`}`}
    axiosInstance={axios}
    configureAxios>
    <Provider store={store}>
      <UserContextProvider
        baseUrl={`${process.env.NODE_ENV === 'development' ? 'http://localhost/[@EntityName@]/api/v1' : `/[@EntityName@]/api/v1`}`}>
        <OAuthSecuredFragment>
          <App/>
        </OAuthSecuredFragment>
      </UserContextProvider>
    </Provider>
  </OAuthWebContext>,
  // </React.StrictMode>
  document.getElementById("root")
);

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();
